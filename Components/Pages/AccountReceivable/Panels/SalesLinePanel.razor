@implements IDialogContentComponent<SalesLine>
@inject ISalesOrderResposity context

<FluentDialogHeader ShowDismiss="false">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.BuildingPeople())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

<FluentStack Orientation="Orientation.Horizontal">

    <FluentStack Orientation="Orientation.Vertical">
        <FluentTextField Label="Item Code" @bind-Value="@Content.ItemCode" Style="width:150px" />
        <FluentTextField Label="Item Name" @bind-Value="@Content.ItemName" Style="width:350px" />
        <FluentTextField Label="Case No" @bind-Value="@Content.CaseNo" Style="width:120px" />
    </FluentStack>
    <FluentStack Orientation="Orientation.Vertical">
        <FluentTextField @onchange="OnUSTeethChange" Label="Us Teeth" @bind-Value="@Content.UsTeeth" Style="width:250px" />
        <FluentTextField Label="Eur Teeth" @bind-Value="@Content.EurTeeth" Style="width:250px" />
        <FluentNumberField Label="Sales Qty" @bind-Value="@Content.SalesQty" Style="width:70px" />
        <FluentTextField Label="Shade" @bind-Value="@Content.Shade" Style="width:250px" />
    </FluentStack>
</FluentStack>

<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" IconStart="@(new Icons.Regular.Size20.Save())" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>
@code {

    [Parameter]
    public SalesLine Content { get; set; } = new();

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {

    }
    private async Task OnUSTeethChange(ChangeEventArgs args)
    {
        await Task.Delay(500);

        var UsTeeth = args.Value!.ToString();
        Content.UsTeeth = UsTeeth;

        var EurTeeth = Helper.ChangeTeeth(UsTeeth);
        var Qty = Helper.CountAllTeeth(UsTeeth);

        Content.EurTeeth = EurTeeth;
        Content.SalesQty = Qty;

    }

    private async Task SaveAsync()
    {
        var UsTeeth = Content.UsTeeth;
       

        await Dialog.CloseAsync(Content);
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
}
